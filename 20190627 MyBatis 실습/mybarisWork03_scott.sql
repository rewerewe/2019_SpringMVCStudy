SELECT USER
FROM DUAL;
-->SCOTT

--○ 실습 테이블 생성 
CREATE TABLE TBL_STUDENT
( SID   NUMBER
, NAME  VARCHAR2(30)
, TEL   VARCHAR2(40)
, CONSTRAINT STUDENT_SID_PK PRIMARY KEY(SID)
);
--> Table TBL_STUDENT이(가) 생성되었습니다.


--○ 데이터 입력
INSERT INTO TBL_STUDENT(SID, NAME, TEL) 
VALUES ('1', '김선아', '010-1111-1111')
;

INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES ('2', '김경환', '010-2222-2222')
;

INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES ('3', '전훈의', '010-3333-3333')
;

INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES ('4', '김정규', '010-4444-4444')
;

INSERT INTO TBL_STUDENT(SID, NAME, TEL)
VALUES ('5', '김성희', '010-5555-5555')
;

DROP TABLE TBL_STUDENT PURGE;

COMMIT;

SELECT SID, NAME, TEL
FROM TBL_STUDENT
WHERE SID=1
;

--○ 실습 테이블 생성 
CREATE TABLE TBL_GRADE
( SID   NUMBER
, SUB1  VARCHAR2(3)
, SUB2  VARCHAR2(3)
, SUB3  VARCHAR2(3)
, CONSTRAINT GRADE_SID_PK PRIMARY KEY(SID)
, CONSTRAINT GRADE_SID_FK FOREIGN KEY(SID)
                REFERENCES TBL_STUDENT(SID)
        
);

ALTER TABLE TBL_GRADE
ADD CONSTRAINT GRADE_SUB1_CK CHECK(SUB1 BETWEEN 0 AND 100);

ALTER TABLE TBL_GRADE
ADD CONSTRAINT GRADE_SUB2_CK CHECK(SUB2 BETWEEN 0 AND 100);

ALTER TABLE TBL_GRADE
ADD CONSTRAINT GRADE_SUB3_CK CHECK(SUB3 BETWEEN 0 AND 100);


SELECT SID, SUB1, SUB2, SUB3
FROM TBL_GRADE
WHERE SID=1;

--○ 데이터 입력
INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES ('1', '90', '80', '70')
;

INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES ('2', '70', '60', '50')
;

INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES ('3', '50', '40', '30')
;

INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES ('4', '90', '90', '30')
;

INSERT INTO TBL_GRADE(SID, SUB1, SUB2, SUB3)
VALUES ('5', '60', '90', '50')
;

COMMIT;

--○ 뷰 생성(STUDENTVIEW)
CREATE OR REPLACE VIEW STUDENTVIEW
AS
SELECT SID, NAME, TEL
      ,( SELECT COUNT(*)
         FROM TBL_GRADE 
         WHERE SID = S.SID ) as SUB
FROM TBL_STUDENT S
;
--> View STUDENTVIEW이(가) 생성되었습니다.

SELECT COUNT(*)
FROM TBL_GRADE
WHERE SID = 3;

--○ 뷰 생성(GRADEVIEW) 
CREATE OR REPLACE VIEW GRADEVIEW
AS
SELECT SID, NAME, SUB1, SUB2, SUB3, TOT, AVG
     , (CASE WHEN AVG >= 60 AND SUB1 >=40 AND SUB2 >= 40 AND SUB3 >=40 THEN 0 
             WHEN AVG <= 60 THEN 1
             ELSE 2
        END) AS CH
FROM 
(SELECT S.SID, S.NAME, G.SUB1, G.SUB2, G.SUB3
      , (SUB1 + SUB2 + SUB3) AS TOT 
      , ROUND((SUB1 + SUB2 + SUB3)/3, 1) AS AVG
FROM TBL_STUDENT S, TBL_GRADE G
WHERE S.SID = G.SID(+))
;
--> View GRADEVIEW이(가) 생성되었습니다.


SELECT SID, NAME, SUB1, SUB2, SUB3, TOT, AVG
FROM GRADEVIEW
WHERE SID=1
;
        
SELECT SID, SUB1, SUB2, SUB3
FROM TBL_GRADE;
        
  