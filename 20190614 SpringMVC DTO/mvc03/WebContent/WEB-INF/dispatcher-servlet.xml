<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<context:component-scan
		base-package="org.springframework.samples.petclinic.web" />
		
	<!-- ※ 사용자 정의 Controller 객체 등록 및 URL 매핑 주소 등록 -->
	<!--    - 『name=""』 속성에 URL 매핑 주소를 등록한다. -->
	<!--       이 과정에서 Front Controller 가 갖고 있는 확장자의 형태롤 구성한다. -->
	<!-- 	- 『class=""』 속성은 controller  -->
	
	<!-- <bean name="나래.사람" class="com.test.mvc.HelloController"></bean> -->
	<!-- <bean name="상현.사람" class="com.test.mvc.HelloController"></bean> -->
	<!-- <bean name="윤비.사람" class="com.test.mvc.HelloController"></bean> -->
	
	<!-- SimpleDriverDataSource -->
	<bean id="localDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="scott"></property>
		<property name="password" value="tiger"></property>
	</bean>
	
	<bean id="remoteDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url" value="jdbc:oracle:thin:@211.238.142.170:1521:xe"></property>
		<property name="username" value="scott"></property>
		<property name="password" value="tiger"></property>
	</bean>
	
	<!-- MemberDAO 
		: MemberListController 에 dao 의 형태로 넘겨주어야 MemberListController 가 일을 할 수 있다. -->
	<bean id="memberDAO" class="com.test.mvc.MemberDAO">
		<property name="dataSource">
			<!-- 어떤 DriverDataSourcec 를 설정해주는가에 따라 사실상 DI가 일어난다.  -->
			<ref bean="remoteDataSource"></ref>
		</property>
	</bean>
	
	<!-- MemberListController -->
	<bean name="/memberlist.action" class="com.test.mvc.MemberListController">
		<property name="dao">
			<ref bean="memberDAO"></ref>
		</property>
	</bean>
	
	<!-- MemberInsertController -->
	<bean name="/memberinsert.action" class="com.test.mvc.MemberInsertController">
		<property name="dao">
			<ref bean="memberDAO"></ref>
		</property> 
	</bean>

</beans>